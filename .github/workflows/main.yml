name: Node.js + React.js CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint-and-format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Install ESLint and Prettier
        run: npm install eslint prettier --save-dev

      - name: Check formatting with Prettier
        run: npm run format:check  # Ensure you have a "format:check" script in package.json

  test:
    runs-on: ubuntu-latest
    needs: lint-and-format  # Run tests only if linting and formatting pass
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Install env-cmd (optional)
        run: npm install -g env-cmd

      - name: Run tests
        run: npm run test:ci  # Ensure you have a "test:ci" script in package.json

      - name: Upload test coverage
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage
          path: coverage/

  build:
    runs-on: ubuntu-latest
    needs: test  # Build only if tests pass
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Build the React app
        run: npm run build:ci  # Ensure you have a "build:ci" script in package.json

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: build/

  deploy-to-dev:
    runs-on: ubuntu-latest
    needs: build  # Deploy only if build succeeds
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Build the React app
        run: npm run build:ci

      - name: Check if dev branch exists
        id: check-dev-branch
        run: |
          if git ls-remote --exit-code --heads origin dev; then
            echo "dev-branch-exists=true" >> $GITHUB_ENV
          else
            echo "dev-branch-exists=false" >> $GITHUB_ENV
          fi

      - name: Create dev branch if it doesn't exist
        if: env.dev-branch-exists == 'false'
        run: |
          git checkout -b dev
          git push origin dev

      - name: Deploy to dev branch
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build
          publish_branch: dev
